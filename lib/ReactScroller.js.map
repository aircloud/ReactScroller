{"version":3,"sources":["../src/ReactScroller.jsx"],"names":["ReactScroller","props","arr","i","push","state","content","showRefresh","showLoadMore","lowerBound","showRefreshTip","refresh","loadmore","height","containerHeight","width","containerWidth","refreshTip","children","loadMoreTip"],"mappings":";;;;;;;;AAMA;;;;AACA;;AACA;;;;;;;;;;+eARA;;;;;;IAUMA,a;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACTA,KADS;;AAGf,YAAIC,MAAM,EAAV;;AAEA,aAAI,IAAIC,IAAI,CAAZ,EAAgBA,IAAI,EAApB,EAAyBA,GAAzB,EAA6B;AACzBD,gBAAIE,IAAJ,CAASD,CAAT;AACH;;AAED,cAAKE,KAAL,GAAa;AACTC,qBAAQJ,GADC;AAETK,yBAAY,KAFH;AAGTC,0BAAa;AAHJ,SAAb;;AATe;AAelB;;;;iCACO;AAAA;;AACJ,mBACI;AAAA;AAAA,kBAAmB,WAAW,CAA9B,EAAiC,WAAU,6BAA3C,EAAyE,QAAO,0BAAhF;AACc,gCAAY,KAAKP,KAAL,CAAWQ,UAAX,IAAyB,EADnD;AAEc,oCAAkB,0BAAM;AACpB,+BAAKR,KAAL,CAAWS,cAAX;AACH,qBAJf;AAKc,6BAAW,mBAAM;AACb,4BAAG,OAAKT,KAAL,CAAWM,WAAd,EAA0B;AAC1B,+BAAKN,KAAL,CAAWU,OAAX;AACH,qBARf;AASc,mCAAe,yBAAI;AACf,4BAAG,OAAKV,KAAL,CAAWO,YAAd,EAA2B;AAC3B,+BAAKP,KAAL,CAAWW,QAAX;AACH;AAZf;AAcI;AAAA;AAAA,sBAAK,IAAG,4BAAR,EAAqC,OAAO,EAACC,QAAO,KAAKZ,KAAL,CAAWa,eAAnB,EAAmCC,OAAM,KAAKd,KAAL,CAAWe,cAAX,IAA2B,MAApE,EAA5C;AACI;AAAA;AAAA,0BAAK,IAAG,yBAAR,EAAkC,WAAU,oBAA5C;AACI;AAAA;AAAA,8BAAK,WAAW,KAAKf,KAAL,CAAWM,WAAX,GAAuB,aAAvB,GAAqC,aAArD;AAAqE,iCAAKN,KAAL,CAAWgB;AAAhF,yBADJ;AAEK,6BAAKhB,KAAL,CAAWiB,QAFhB;AAGI;AAAA;AAAA,8BAAK,WAAW,KAAKjB,KAAL,CAAWO,YAAX,GAAwB,cAAxB,GAAuC,cAAvD;AACK,iCAAKP,KAAL,CAAWkB;AADhB;AAHJ;AADJ;AAdJ,aADJ;AA0BH;;;;;;kBAGUnB,a","file":"ReactScroller.js","sourcesContent":["/**\n * Created by Xiaotao.Nie on 08/07/2017.\n * All right reserved\n * IF you have any question please email iconie@tencent.com\n */\n\nimport React, { Component } from 'react';\nimport \"./ReactScroller.less\";\nimport ReactScrollerCore from \"./ReactScrollerCore\";\n\nclass ReactScroller extends Component{\n    constructor(props) {\n        super(props);\n\n        let arr = [];\n\n        for(let i = 0 ; i < 50 ; i++){\n            arr.push(i);\n        }\n\n        this.state = {\n            content:arr,\n            showRefresh:false,\n            showLoadMore:false\n        };\n\n    }\n    render(){\n        return(\n            <ReactScrollerCore maxScroll={0} container=\"#ReactScrollerCoreContainer\" target=\"#ReactScrollerCoretarget\"\n                          lowerBound={this.props.lowerBound || 50}\n                          showRefreshTip = {() => {\n                              this.props.showRefreshTip();\n                          }}\n                          refresh = {() => {\n                              if(this.props.showRefresh)return;\n                              this.props.refresh();\n                          }}\n                          onLowerArrive={()=>{\n                              if(this.props.showLoadMore)return;\n                              this.props.loadmore();\n                          }}\n            >\n                <div id=\"ReactScrollerCoreContainer\" style={{height:this.props.containerHeight,width:this.props.containerWidth||\"100%\"}}>\n                    <div id=\"ReactScrollerCoretarget\" className=\"ReactScollerTarget\">\n                        <div className={this.props.showRefresh?\"refreshShow\":\"refreshHide\"}>{this.props.refreshTip}</div>\n                        {this.props.children}\n                        <div className={this.props.showLoadMore?\"loadMoreShow\":\"loadMoreHide\"}>\n                            {this.props.loadMoreTip}\n                        </div>\n                    </div>\n                </div>\n            </ReactScrollerCore>\n        )\n    }\n}\n\nexport default ReactScroller;\n"]}